<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.bs.spring" />
	
	
	<!-- pojo클래스 bean으로 등록하기 Animal along=new Animal(); -->
	<!-- <beans:bean id="alonge" class="com.bs.spring.model.vo.Animal">
	</beans:bean> -->
	<!--
	 
	생성된 객체에 setter를 이용해서 값을 대입 -->
	<!-- <beans:bean id="alonge" class="com.bs.spring.model.vo.Animal">
		<beans:property name="name" value="아롱이"/>
		<beans:property name="age" value="8"/>
		<beans:property name="gender" value="여"/>
		<beans:property name="weight" value="5.8"/>
	</beans:bean> -->
	
	<!-- 매개변수있는 생성자로 초기화하기 : model 객체에 매개변수 있는 클래스에 맞게 개수를 맞춰줘야함-->
	<beans:bean id="alonge" class="com.bs.spring.model.vo.Animal">
		<beans:constructor-arg index="0" value="아롱이2"/>
		<beans:constructor-arg index="1" value="15"/>
		<!-- <beans:constructor-arg index="2" value="남"/>
		<beans:constructor-arg index="3" value="8.8"/> -->
	</beans:bean>
	
	<beans:bean id="dog" class="com.bs.spring.model.vo.Animal" 
	init-method="initTest" destroy-method="destroyTest"/>
	<!-- 특정 시점에 실행시키는 메소드 init-method , destroy-method ..-->
	
	<beans:bean id="yeonji" class="com.bs.spring.model.vo.Person">
		<beans:property name="name" value="연지"/>
		<beans:property name="age" value="31"/>
		<beans:property name="myAnimal" ref="alonge"/><!-- 참조형은 ref를 사용!! -->
	</beans:bean>
	
	<!--  	<beans:bean id="service" class="com.bs.spring.demo.model.service.DemoServiceImpl">
		<beans:constructor-arg index="0" ref="DemoDaoImpl">
		<beans:constructor-arg index="1" ref="sqlSessionTemplate">
	</beans:bean>  -->
	
	
	<!-- 인터셉터등록하기 -->
	<interceptors>
		<interceptor>
			<!-- 주소패턴으로 설정하는 값, filter, servlet url-pattern선언한것과 동일하게 작성 -->
			<mapping path="/demo/*"/>
			<!-- 특정매핑주소에 대해 예외처리를 할 수 있다. -->
			<exclude-mapping path="/demo/demo.do"/>
			<beans:bean class="com.bs.spring.common.interceptor.LoggerInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/demo/demolist.do"/>
			<beans:ref bean="logincheck"/>
		</interceptor>
		<interceptor>
			<mapping path="/board/boardWrite.do"/>
			<beans:ref bean="logincheck"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="logincheck" 
		class="com.bs.spring.common.interceptor.LoginCheckInterceptor"/>
	
	
	<!-- 파일업로드처리 할 resolver를 등록하기 -->
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일크기설정 -->
		<beans:property name="maxUploadSize" value="104857600"/>
	</beans:bean>
	
	<!-- json컨버터등록하기 -->
	<beans:bean id="jacksonconverter"
	class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonconverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</beans:beans>
